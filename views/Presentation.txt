
1. Each intruduce,

-Mitch
- Why we chose the food application project
-- We chose this app in particular because we thought it looked challenging, it would have an interesting UI, and because we thought it would be cool
to implement the TWILIO text API

18s


2. Jump right into presenting
* Welcome to Nallys Catch, this is our SPA
* Eat food button
* try add to cart and checkout
* login
* add appetizers
* search Nally
* use nav link to go to cocktails
* add a few then remove one
* checkout and hit pay and wait for text
* hit logo
1:05min
* this is the owner side that can only be accessed by the owner
* as you can see the order that pavneet placed has been recieved Here, you can see all of the details of the order
* The owner can then send alerts in minutes to the customers phone number stored in the database, as Pavneet will show you he recieved a text
* Then finally the order can be bumped whenever the kitchen decides too
* Mitch is going to send us an order, and there it is ---


- How the restaurant owner recieves an order and interacts with the customer. (Larry)
--Here we have a much simpler ui that is rendered (without a page reload) only if the owner is logged in
--Recieve order from customer as soon as order is paid for.
--The owner can send custom alerts about how long their order is going to take to make.
--The owner can then bump the order off of the screen whenever they choose.

2:10min
(Mitch)

- Stayed on voice chat all day, used liveshare the whole time to keep all our code synced

- Pros
-- By pair programming, we all got to work on and learn about all aspects of app
-- Since we were on discord together all day, we were able to keep eachother motivated and entertained
-- Debugging and decision making was a lot quicker because everyone was always there.

- Cons
-- With everyone coding in the same file at once, it sometimes be hard to find out who broke the app.
-- Working in one file was difficult at the beginning because only the host could refresh the page, but we figured out that you can share the local server in VS Code


3:05
(Pavneet)
-- Some Major difficulties while coding
-- Having to figure out how to target elements with jQuery that were rendered after page load.
-- Login/logout was actually was a problem causing bugs due to different privilidges for customers vs owner.
   -We think if we spent the time to actually build out a login page we may have negated the time to fix our other bugs.
3:45

4. Wrap up, stretch, this has been a great experience, things we would like to add the the application.

(logan)
- stretch
-- complete single page application
-- added our site to heroku @ www.nallys-catch-of-the-day.herokuapp.com
-- we made our site pretty responsive, once we had our project on a heroku server we were able to see how it looked on our phones and changed it accordingly


LOGAN
-things we would like to add to this application
  -- add updates to menu (PUT) by owner
  -- add delivery and mapping functionality.


LOGAN

--This has been all of our favourite part of the bootcamp and we couldn't have asked for better group members.


4:10min
